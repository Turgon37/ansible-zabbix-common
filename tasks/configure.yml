---

- name: "Ensure service group '{{ zabbix_common__service_group }}' is present"
  group:
    name:   '{{ zabbix_common__service_group }}'
    system: yes
    state:  present
  notify: [ 'zabbix-service-handler' ]

- name: "Ensure service user '{{ zabbix_common__service_user }}' is present (first try)"
  user:
    name:       '{{ zabbix_common__service_user }}'
    group:      '{{ zabbix_common__service_group }}'
    shell:      /sbin/nologin
    home:       '{{ zabbix_common__var_directory }}'
    createhome: no
    system:     yes
    state:      present
  notify: [ 'zabbix-service-handler' ]
  register: _zabbix_common__service_user_changed
  ignore_errors: True

- name: Stop zabbix service before user update
  service:
    name:  '{{ zabbix_common__service_name }}'
    state: stopped
  when: zabbix_common__service_name is defined and _zabbix_common__service_user_changed|failed

- name: "Ensure service user '{{ zabbix_common__service_user }}' is present (second try)"
  user:
    name:       '{{ zabbix_common__service_user }}'
    group:      '{{ zabbix_common__service_group }}'
    shell:      /sbin/nologin
    home:       '{{ zabbix_common__var_directory }}'
    createhome: no
    system:     yes
    state:      present
  notify: [ 'zabbix-service-handler' ]
  when: zabbix_common__service_name is defined and _zabbix_common__service_user_changed|failed

- name: Start zabbix service after user update
  service:
    name:  '{{ zabbix_common__service_name }}'
    state: started
  when: zabbix_common__service_name is defined and _zabbix_common__service_user_changed|failed

- name: Make sure the var directory exists
  file:
    path:  '{{ zabbix_common__var_directory }}'
    owner: '{{ zabbix_common__service_user }}'
    group: '{{ zabbix_common__service_group }}'
    state: directory
    mode:  0700
  notify: [ 'zabbix-service-handler' ]

- name: Make sure the log directory exists
  file:
    path:  '{{ zabbix_common__log_directory }}'
    owner: '{{ zabbix_common__service_user }}'
    group: '{{ zabbix_common__service_group }}'
    state: directory
    mode:  0755
  notify: [ 'zabbix-service-handler' ]

- name: Make sure the configuration directory exists
  file:
    path:  '{{ zabbix_common__conf_directory }}'
    state: directory
    mode:  0755
  notify: [ 'zabbix-service-handler' ]

- name: Ensure userparameters directory exists
  file:
    path:  '{{ zabbix_common__userparameters_directory }}'
    mode:  0755
    state: directory
  when: zabbix_common__userparameters_directory is defined
  notify: [ 'zabbix-service-handler' ]

- name: Test if SNMP MIBS directory exists
  stat:
    path:  '{{ zabbix_common__mibs_directory }}'
  when: zabbix_common__mibs_install|length > 0
  register: _zabbix_common__mibs_directory
  
- name: Fail if SNMP MIBS directory is absent
  fail:
  when: zabbix_common__mibs_install|length > 0 and (
          (not _zabbix_common__mibs_directory.stat.exists) or
          (not _zabbix_common__mibs_directory.stat.isdir|d(False))
        )

- name: Copy SNMP MIBS files
  copy:
    src:   'mibs/{{ item }}/'
    dest:  '{{ zabbix_common__mibs_directory }}'
    owner: root
    group: root
    mode: 0644
  with_items: '{{ zabbix_common__mibs_install }}'
